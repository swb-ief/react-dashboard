{"version":3,"sources":["../node_modules/d3-array/src/min.js","components/loaders/Timeseries.js","components/TimeseriesExplorer.js","../node_modules/fast-deep-equal/index.js"],"names":["min","values","valueof","undefined","value","index","TimeseriesLoader","windowWidth","window","innerWidth","width","height","viewBox","speed","cx","cy","r","Timeseries","lazy","retry","TimeseriesBrush","TimeseriesExplorer","stateCode","timeseries","timelineDate","date","regionHighlighted","setRegionHighlighted","anchor","setAnchor","expandTable","hideVaccinated","noRegionHighlightedDistrictData","t","useTranslation","useLocalStorage","lookback","setLookback","chartType","setChartType","isUniform","setIsUniform","isLog","setIsLog","isMovingAverage","setIsMovingAverage","stateCodeDateRange","Object","keys","dates","beginningDate","getIndiaDateYesterdayISO","endDate","length","useState","brushSelectionEnd","setBrushSelectionEnd","useEffect","brushSelectionStart","formatISO","subDays","parseIndiaDate","representation","explorerElement","useRef","isVisible","useIsVisible","once","useWindowSize","selectedRegion","useMemo","districts","districtName","selectedTimeseries","regions","states","filter","code","map","reduce","acc1","acc2","find","region","brushSelectionDates","statistics","useCallback","target","JSON","parse","TIMESERIES_STATISTICS","statistic","STATISTIC_CONFIGS","category","className","classnames","stickied","expanded","style","display","ref","onClick","bind","this","entries","TIMESERIES_CHART_TYPES","ctype","htmlFor","id","type","checked","aria-label","onChange","disabled","fallback","currentBrushSelection","animationIndex","animationDelay","TIMESERIES_LOOKBACK_DAYS","numDays","selected","isEqual","prevProps","currProps","forceRender","equal","memo","module","exports","a","b","constructor","i","Array","isArray","RegExp","source","flags","valueOf","prototype","toString","hasOwnProperty","call","key"],"mappings":"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","file":"static/js/37.606d615a.chunk.js","sourcesContent":["export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","import ContentLoader from 'react-content-loader';\n\nconst TimeseriesLoader = () => {\n  const windowWidth = window.innerWidth;\n  const width = windowWidth >= 769 ? 480 : windowWidth;\n  const height = 200 * 6;\n\n  return (\n    <ContentLoader\n      viewBox={`0 0 ${width} ${height}`}\n      height={height}\n      width={width}\n      speed={2}\n    >\n      <circle cx={0.4 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.5 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.6 * width} cy={height / 2} r=\"5\" />\n    </ContentLoader>\n  );\n};\n\nexport default TimeseriesLoader;\n","import TimeseriesLoader from './loaders/Timeseries';\n\nimport {\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  TIMESERIES_CHART_TYPES,\n  TIMESERIES_LOOKBACK_DAYS,\n  TIMESERIES_STATISTICS,\n} from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport {\n  getIndiaDateYesterdayISO,\n  parseIndiaDate,\n  retry,\n} from '../utils/commonFunctions';\n\nimport {PinIcon, ReplyIcon} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport {min} from 'd3-array';\nimport {formatISO, subDays} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  lazy,\n  Suspense,\n} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useLocalStorage, useWindowSize} from 'react-use';\n\nconst Timeseries = lazy(() => retry(() => import('./Timeseries')));\nconst TimeseriesBrush = lazy(() => retry(() => import('./TimeseriesBrush')));\n\nfunction TimeseriesExplorer({\n  stateCode,\n  timeseries,\n  date: timelineDate,\n  regionHighlighted,\n  setRegionHighlighted,\n  anchor,\n  setAnchor,\n  expandTable = false,\n  hideVaccinated = false,\n  noRegionHighlightedDistrictData,\n}) {\n  const {t} = useTranslation();\n  const [lookback, setLookback] = useLocalStorage('timeseriesLookbackDays', 90);\n  const [chartType, setChartType] = useLocalStorage('chartType', 'delta');\n  const [isUniform, setIsUniform] = useLocalStorage('isUniform', false);\n  const [isLog, setIsLog] = useLocalStorage('isLog', false);\n  const [isMovingAverage, setIsMovingAverage] = useLocalStorage(\n    'isMovingAverage',\n    false\n  );\n\n  const stateCodeDateRange = Object.keys(timeseries?.[stateCode]?.dates || {});\n  const beginningDate =\n    stateCodeDateRange[0] || timelineDate || getIndiaDateYesterdayISO();\n  const endDate = min([\n    stateCodeDateRange[stateCodeDateRange.length - 1],\n    timelineDate || getIndiaDateYesterdayISO(),\n  ]);\n\n  const [brushSelectionEnd, setBrushSelectionEnd] = useState(endDate);\n  useEffect(() => {\n    setBrushSelectionEnd(endDate);\n  }, [endDate]);\n\n  const brushSelectionStart =\n    lookback !== null\n      ? formatISO(subDays(parseIndiaDate(brushSelectionEnd), lookback), {\n          representation: 'date',\n        })\n      : beginningDate;\n\n  const explorerElement = useRef();\n  const isVisible = useIsVisible(explorerElement, {once: true});\n  const {width} = useWindowSize();\n\n  const selectedRegion = useMemo(() => {\n    if (timeseries?.[regionHighlighted.stateCode]?.districts) {\n      return {\n        stateCode: regionHighlighted.stateCode,\n        districtName: regionHighlighted.districtName,\n      };\n    } else {\n      return {\n        stateCode: regionHighlighted.stateCode,\n        districtName: null,\n      };\n    }\n  }, [timeseries, regionHighlighted.stateCode, regionHighlighted.districtName]);\n\n  const selectedTimeseries = useMemo(() => {\n    if (selectedRegion.districtName) {\n      return timeseries?.[selectedRegion.stateCode]?.districts?.[\n        selectedRegion.districtName\n      ]?.dates;\n    } else {\n      return timeseries?.[selectedRegion.stateCode]?.dates;\n    }\n  }, [timeseries, selectedRegion.stateCode, selectedRegion.districtName]);\n\n  const regions = useMemo(() => {\n    const states = Object.keys(timeseries || {})\n      .filter((code) => code !== stateCode)\n      // .sort((code1, code2) =>\n      //   STATE_NAMES[code1].localeCompare(STATE_NAMES[code2])\n      // )\n      .map((code) => {\n        return {\n          stateCode: code,\n          districtName: null,\n        };\n      });\n    const districts = Object.keys(timeseries || {}).reduce((acc1, code) => {\n      return [\n        ...acc1,\n        ...Object.keys(timeseries?.[code]?.districts || {}).reduce(\n          (acc2, districtName) => {\n            return [\n              ...acc2,\n              {\n                stateCode: code,\n                districtName: districtName,\n              },\n            ];\n          },\n          []\n        ),\n      ];\n    }, []);\n\n    return [\n      {\n        stateCode: stateCode,\n        districtName: null,\n      },\n      ...states,\n      ...districts,\n    ];\n  }, [timeseries, stateCode]);\n\n  const dropdownRegions = useMemo(() => {\n    if (\n      regions.find(\n        (region) =>\n          region.stateCode === regionHighlighted.stateCode &&\n          region.districtName === regionHighlighted.districtName\n      )\n    )\n      return regions;\n    return [\n      ...regions,\n      {\n        stateCode: regionHighlighted.stateCode,\n        districtName: regionHighlighted.districtName,\n      },\n    ];\n  }, [regionHighlighted.stateCode, regionHighlighted.districtName, regions]);\n\n  const dates = useMemo(\n    () =>\n      Object.keys(selectedTimeseries || {}).filter((date) => date <= endDate),\n    [selectedTimeseries, endDate]\n  );\n\n  const brushSelectionDates = useMemo(\n    () =>\n      dates.filter(\n        (date) => brushSelectionStart <= date && date <= brushSelectionEnd\n      ),\n    [dates, brushSelectionStart, brushSelectionEnd]\n  );\n\n  const handleChange = useCallback(\n    ({target}) => {\n      setRegionHighlighted(JSON.parse(target.value));\n    },\n    [setRegionHighlighted]\n  );\n\n  const resetDropdown = useCallback(() => {\n    setRegionHighlighted({\n      stateCode: stateCode,\n      districtName: null,\n    });\n  }, [stateCode, setRegionHighlighted]);\n\n  const statistics = useMemo(\n    () =>\n      TIMESERIES_STATISTICS.filter(\n        (statistic) =>\n          (!(STATISTIC_CONFIGS[statistic]?.category === 'vaccinated') ||\n            !hideVaccinated) &&\n          // (chartType === 'total' || statistic !== 'active') &&\n          (chartType === 'delta' || statistic !== 'tpr')\n      ),\n    [chartType, hideVaccinated]\n  );\n\n  return (\n    <div\n      className={classnames(\n        'TimeseriesExplorer fadeInUp',\n        {\n          stickied: anchor === 'timeseries',\n        },\n        {expanded: expandTable}\n      )}\n      style={{\n        display:\n          anchor && anchor !== 'timeseries' && (!expandTable || width < 769)\n            ? 'none'\n            : '',\n      }}\n      ref={explorerElement}\n    >\n      <div className=\"timeseries-header\">\n        <div\n          className={classnames('anchor', 'fadeInUp', {\n            stickied: anchor === 'timeseries',\n          })}\n          style={{\n            display: expandTable && width >= 769 ? 'none' : '',\n          }}\n          onClick={\n            setAnchor &&\n            setAnchor.bind(this, anchor === 'timeseries' ? null : 'timeseries')\n          }\n        >\n          <PinIcon />\n        </div>\n\n        <h1>{t('Spread Trends')}</h1>\n        <div className=\"tabs\">\n          {Object.entries(TIMESERIES_CHART_TYPES).map(\n            ([ctype, value], index) => (\n              <div\n                className={`tab ${chartType === ctype ? 'focused' : ''}`}\n                key={ctype}\n                onClick={setChartType.bind(this, ctype)}\n              >\n                <h4>{t(value)}</h4>\n              </div>\n            )\n          )}\n        </div>\n\n        <div className=\"timeseries-options\">\n          <div className=\"scale-modes\">\n            <label className=\"main\">{`${t('Scale Modes')}:`}</label>\n            <div className=\"timeseries-mode\">\n              <label htmlFor=\"timeseries-mode\">{t('Uniform')}</label>\n              <input\n                id=\"timeseries-mode\"\n                type=\"checkbox\"\n                className=\"switch\"\n                checked={isUniform}\n                aria-label={t('Checked by default to scale uniformly.')}\n                onChange={setIsUniform.bind(this, !isUniform)}\n              />\n            </div>\n            <div\n              className={`timeseries-mode ${\n                chartType !== 'total' ? 'disabled' : ''\n              }`}\n            >\n              <label htmlFor=\"timeseries-logmode\">{t('Logarithmic')}</label>\n              <input\n                id=\"timeseries-logmode\"\n                type=\"checkbox\"\n                checked={chartType === 'total' && isLog}\n                className=\"switch\"\n                disabled={chartType !== 'total'}\n                onChange={setIsLog.bind(this, !isLog)}\n              />\n            </div>\n          </div>\n\n          <div\n            className={`timeseries-mode ${\n              chartType === 'total' ? 'disabled' : ''\n            } moving-average`}\n          >\n            <label htmlFor=\"timeseries-moving-average\">\n              {t('7 day Moving Average')}\n            </label>\n            <input\n              id=\"timeseries-moving-average\"\n              type=\"checkbox\"\n              checked={chartType === 'delta' && isMovingAverage}\n              className=\"switch\"\n              disabled={chartType !== 'delta'}\n              onChange={setIsMovingAverage.bind(this, !isMovingAverage)}\n            />\n          </div>\n        </div>\n      </div>\n      {/* {dropdownRegions && (\n        <div className=\"state-selection\">\n          <div className=\"dropdown\">\n            <select\n              value={JSON.stringify(selectedRegion)}\n              onChange={handleChange}\n            >\n              {dropdownRegions\n                .filter(\n                  (region) =>\n                    STATE_NAMES[region.stateCode] !== region.districtName\n                )\n                .map((region) => {\n                  return (\n                    <option\n                      value={JSON.stringify(region)}\n                      key={`${region.stateCode}-${region.districtName}`}\n                    >\n                      {region.districtName\n                        ? t(region.districtName)\n                        : t(STATE_NAMES[region.stateCode])}\n                    </option>\n                  );\n                })}\n            </select>\n          </div>\n          <div className=\"reset-icon\" onClick={resetDropdown}>\n            <ReplyIcon />\n          </div>\n        </div>\n      )} */}\n      {isVisible && (\n        <Suspense fallback={<TimeseriesLoader />}>\n          <Timeseries\n            timeseries={selectedTimeseries}\n            regionHighlighted={selectedRegion}\n            dates={brushSelectionDates}\n            {...{\n              statistics,\n              endDate,\n              chartType,\n              isUniform,\n              isLog,\n              isMovingAverage,\n              noRegionHighlightedDistrictData,\n            }}\n          />\n          <TimeseriesBrush\n            timeseries={selectedTimeseries}\n            regionHighlighted={selectedRegion}\n            currentBrushSelection={[brushSelectionStart, brushSelectionEnd]}\n            animationIndex={statistics.length}\n            {...{dates, endDate, lookback, setBrushSelectionEnd, setLookback}}\n          />\n        </Suspense>\n      )}\n      {!isVisible && <div style={{height: '50rem'}} />}\n      <div\n        className=\"pills fadeInUp\"\n        style={{animationDelay: `${(1 + statistics.length) * 250}ms`}}\n      >\n        {TIMESERIES_LOOKBACK_DAYS.map((numDays) => (\n          <button\n            key={numDays}\n            type=\"button\"\n            className={classnames({\n              selected: numDays === lookback,\n            })}\n            onClick={setLookback.bind(this, numDays)}\n          >\n            {numDays !== null ? `${numDays} ${t('days')}` : t('Beginning')}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (currProps.forceRender) {\n    return false;\n  } else if (!currProps.timeseries && prevProps.timeseries) {\n    return true;\n  } else if (currProps.timeseries && !prevProps.timeseries) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.stateCode,\n      prevProps.regionHighlighted.stateCode\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.districtName,\n      prevProps.regionHighlighted.districtName\n    )\n  ) {\n    return false;\n  } else if (!equal(currProps.date, prevProps.date)) {\n    return false;\n  } else if (!equal(currProps.anchor, prevProps.anchor)) {\n    return false;\n  } else if (!equal(currProps.expandTable, prevProps.expandTable)) {\n    return false;\n  } else if (!equal(currProps.hideVaccinated, prevProps.hideVaccinated)) {\n    return false;\n  } else if (\n    !equal(\n      currProps.noRegionHighlightedDistrictData,\n      prevProps.noRegionHighlightedDistrictData\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(TimeseriesExplorer, isEqual);\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n"],"sourceRoot":""}