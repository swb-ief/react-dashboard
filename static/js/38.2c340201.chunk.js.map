{"version":3,"sources":["components/Level.js","../node_modules/fast-deep-equal/index.js"],"names":["PureLevelItem","statistic","total","delta","t","useTranslation","spring","useSpring","config","SPRING_CONFIG_NUMBERS","statisticConfig","STATISTIC_CONFIGS","capitalize","displayName","h4","to","formatNumber","format","size","verticalAlign","h1","LevelItem","memo","Level","data","isMumbai","levelStatistics","MUMBAI_LEVEL_STATISTICS","LEVEL_STATISTICS","trail","useMemo","styles","map","index","push","animationDelay","width","length","getItemStatistics","datasetKey","getDatasetKey","item","reduce","prev","className","div","classnames","style","constructor","Array","getStatistic","isEqual","prevProps","currProps","equal","module","exports","a","b","i","keys","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key"],"mappings":"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","file":"static/js/38.2c340201.chunk.js","sourcesContent":["import {\n  LEVEL_STATISTICS,\n  MUMBAI_LEVEL_STATISTICS,\n  STATISTIC_CONFIGS,\n  SPRING_CONFIG_NUMBERS,\n} from '../constants';\nimport {capitalize, formatNumber, getStatistic} from '../utils/commonFunctions';\n\nimport {HeartFillIcon} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport {memo, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {animated, useSpring} from 'react-spring';\n\nfunction PureLevelItem({statistic, total, delta}) {\n  const {t} = useTranslation();\n  const spring = useSpring({\n    total: total,\n    delta: delta,\n    config: SPRING_CONFIG_NUMBERS,\n  });\n\n  const statisticConfig = STATISTIC_CONFIGS[statistic];\n\n  return (\n    <>\n      <h5>{t(capitalize(statisticConfig.displayName))}</h5>\n      <animated.h4>\n        {statistic !== 'active' ? (\n          delta > 0 ? (\n            /* Add space after + because react-spring regex bug */\n            spring.delta.to(\n              (delta) =>\n                `+ ${formatNumber(\n                  delta,\n                  statisticConfig.format !== 'short'\n                    ? statisticConfig.format\n                    : 'long',\n                  statistic\n                )}`\n            )\n          ) : (\n            <HeartFillIcon size={9} verticalAlign={2} />\n          )\n        ) : (\n          '\\u00A0'\n        )}\n      </animated.h4>\n      <animated.h1>\n        {spring.total.to((total) =>\n          formatNumber(\n            total,\n            statisticConfig.format !== 'short'\n              ? statisticConfig.format\n              : 'long',\n            statistic\n          )\n        )}\n      </animated.h1>\n    </>\n  );\n}\n\nconst LevelItem = memo(PureLevelItem);\n\nfunction Level({data, isMumbai = false}) {\n  const levelStatistics = isMumbai ? MUMBAI_LEVEL_STATISTICS : LEVEL_STATISTICS;\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    levelStatistics.map((statistic, index) => {\n      styles.push({\n        animationDelay: `${750 + index * 250}ms`,\n        width: `calc(${100 / levelStatistics.length}%)`,\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n\n  function getDatasetKey(statistic) {\n    switch (statistic) {\n      case 'active':\n        return 'total.active';\n      case 'positive':\n        return 'delta.positive';\n      case 'deaths':\n        return 'delta.deaths';\n      case 'discharged':\n        return 'delta.discharged';\n      case 'critical':\n        return 'active.critical';\n      case 'stable_symptomatic':\n        return 'active.symptomatic';\n      case 'stable_asymptomatic':\n        return 'active.asymptomatic';\n      default:\n        return 'total.active';\n    }\n  }\n\n  function getItemStatistics(statistic) {\n    const datasetKey = getDatasetKey(statistic);\n    const dataset = data.map((item) => item[datasetKey]);\n    const result = dataset.reduce((item, prev) => prev + item, 0);\n    return result;\n  }\n\n  return (\n    <div className=\"Level\">\n      {levelStatistics.map((statistic, index) => (\n        <animated.div\n          key={index}\n          className={classnames('level-item', `is-${statistic}`, 'fadeInUp')}\n          style={trail[index]}\n        >\n          <LevelItem\n            {...{statistic}}\n            total={\n              data.constructor === Array\n                ? getItemStatistics(statistic)\n                : getStatistic(data, 'total', statistic)\n            }\n            delta={getStatistic(data, 'delta', statistic)}\n          />\n        </animated.div>\n      ))}\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data, currProps.data)) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(Level, isEqual);\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n"],"sourceRoot":""}