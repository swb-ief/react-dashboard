{"version":3,"sources":["hooks/useIsVisible.js","../node_modules/react-use/esm/useSessionStorage.js","../node_modules/date-fns/esm/max/index.js","components/Mumbai.js","../node_modules/classnames/index.js"],"names":["OPTIONS","root","rootMargin","threshold","useIsVisible","elementRef","useState","isVisible","setIsVisible","useEffect","current","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","unobserve","observe","useSessionStorage","key","initialValue","raw","isBrowser","_a","sessionStorageValue","sessionStorage","getItem","setItem","String","JSON","stringify","parse","state","setState","serializedState","max","dirtyDatesArray","datesArray","result","requiredArgs","arguments","Date","NaN","Array","prototype","slice","call","dirtyDate","currentDate","toDate","undefined","isNaN","Number","DeltaBarGraph","lazy","retry","Footer","Level","VaccinationHeader","MapExplorer","MapSwitcher","Minigraphs","StateHeader","StateMeta","TimeseriesExplorer","State","t","useTranslation","stateCode","useParams","toUpperCase","mapStatistic","setMapStatistic","showAllDistricts","setShowAllDistricts","districtName","regionHighlighted","setRegionHighlighted","delta7Mode","setDelta7Mode","useSWR","DATA_API_ROOT_MUMBAI_DISTRICT","fetcher","revalidateOnMount","refreshInterval","timeseries","data","timeseriesResponseError","error","console","log","stateData","gridRowCount","useMemo","gridColumnCount","window","innerWidth","districtCount","districts","Object","keys","filter","length","Math","ceil","stateMetaElement","useRef","isStateMetaVisible","trail","styles","map","element","index","push","animationDelay","lookback","lastDataDate","updatedDates","meta","date","tested","vaccinated","formatISO","parseIndiaDate","representation","primaryStatistic","MAP_STATISTICS","includes","noDistrictData","UNKNOWN_DISTRICT_KEY","PRIMARY_STATISTICS","every","statistic","getStatistic","statisticConfig","STATISTIC_CONFIGS","noRegionHighlightedDistrictData","hasPrimary","STATE_NAMES","name","content","className","style","position","dates","forceRender","total","vaccinated1","fallback","minHeight","ref","classnames","expanded","gridTemplateRows","sort","a","b","districtNameA","districtNameB","districtA","districtB","handleSort","delta","formatNumber","onClick","height","flexBasis","memo","hasOwn","hasOwnProperty","classNames","classes","i","arg","argType","isArray","inner","apply","toString","join","module","exports","default"],"mappings":"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","file":"static/js/29.c13c9b6f.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\n\nconst OPTIONS = {\n  root: null,\n  rootMargin: '0px 0px 0px 0px',\n  threshold: 0,\n};\n\nconst useIsVisible = (elementRef) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    if (elementRef.current) {\n      const observer = new IntersectionObserver((entries, observer) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setIsVisible(true);\n            observer.unobserve(elementRef.current);\n          }\n        });\n      }, OPTIONS);\n      observer.observe(elementRef.current);\n    }\n  }, [elementRef]);\n\n  return isVisible;\n};\n\nexport default useIsVisible;\n","import { useEffect, useState } from 'react';\nimport { isBrowser } from './misc/util';\nvar useSessionStorage = function (key, initialValue, raw) {\n    if (!isBrowser) {\n        return [initialValue, function () { }];\n    }\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var _a = useState(function () {\n        try {\n            var sessionStorageValue = sessionStorage.getItem(key);\n            if (typeof sessionStorageValue !== 'string') {\n                sessionStorage.setItem(key, raw ? String(initialValue) : JSON.stringify(initialValue));\n                return initialValue;\n            }\n            else {\n                return raw ? sessionStorageValue : JSON.parse(sessionStorageValue || 'null');\n            }\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // sessionStorage can throw. JSON.parse and JSON.stringify\n            // cat throw, too.\n            return initialValue;\n        }\n    }), state = _a[0], setState = _a[1];\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(function () {\n        try {\n            var serializedState = raw ? String(state) : JSON.stringify(state);\n            sessionStorage.setItem(key, serializedState);\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // sessionStorage can throw. Also JSON.stringify can throw.\n        }\n    });\n    return [state, setState];\n};\nexport default useSessionStorage;\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name max\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - `max` function now accepts an array of dates rather than spread arguments.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   var date1 = new Date(1989, 6, 10)\n *   var date2 = new Date(1987, 1, 11)\n *   var maxDate = max(date1, date2)\n *\n *   // v2.0.0 onward:\n *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n *   var maxDate = max(dates)\n *   ```\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} the latest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the latest?\n * var result = max([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Sun Jul 02 1995 00:00:00\n */\n\nexport default function max(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (result === undefined || result < currentDate || isNaN(Number(currentDate))) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","import {\n  DATA_API_ROOT,\n  DATA_API_ROOT_MUMBAI_DISTRICT,\n  MAP_STATISTICS,\n  PRIMARY_STATISTICS,\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport {\n  fetcher,\n  formatNumber,\n  getStatistic,\n  parseIndiaDate,\n  retry,\n} from '../utils/commonFunctions';\n\nimport {SmileyIcon} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport {formatISO, max} from 'date-fns';\nimport {\n  memo,\n  useMemo,\n  useState,\n  useEffect,\n  lazy,\n  Suspense,\n  useRef,\n} from 'react';\nimport {Helmet} from 'react-helmet';\nimport {useTranslation} from 'react-i18next';\nimport {useParams} from 'react-router-dom';\nimport {useSessionStorage} from 'react-use';\nimport useSWR from 'swr';\n\nconst DeltaBarGraph = lazy(() => retry(() => import('./DeltaBarGraph')));\nconst Footer = lazy(() => retry(() => import('./Footer')));\nconst Level = lazy(() => retry(() => import('./Level')));\nconst VaccinationHeader = lazy(() =>\n  retry(() => import('./VaccinationHeader'))\n);\nconst MapExplorer = lazy(() => retry(() => import('./MapExplorer')));\nconst MapSwitcher = lazy(() => retry(() => import('./MapSwitcher')));\nconst Minigraphs = lazy(() => retry(() => import('./Minigraphs')));\nconst StateHeader = lazy(() => retry(() => import('./StateHeader')));\nconst StateMeta = lazy(() => retry(() => import('./StateMeta')));\nconst TimeseriesExplorer = lazy(() =>\n  retry(() => import('./TimeseriesExplorer'))\n);\n\nfunction State() {\n  const {t} = useTranslation();\n\n  const stateCode = useParams().stateCode.toUpperCase();\n\n  const [mapStatistic, setMapStatistic] = useSessionStorage(\n    'mapStatistic',\n    'active'\n  );\n  const [showAllDistricts, setShowAllDistricts] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState({\n    stateCode: stateCode,\n    districtName: null,\n  });\n  const [delta7Mode, setDelta7Mode] = useState(false);\n\n  useEffect(() => {\n    if (regionHighlighted.stateCode !== stateCode) {\n      setRegionHighlighted({\n        stateCode: stateCode,\n        districtName: null,\n      });\n      setShowAllDistricts(false);\n    }\n  }, [regionHighlighted.stateCode, stateCode]);\n\n  const {data: timeseries, error: timeseriesResponseError} = useSWR(\n    `${DATA_API_ROOT_MUMBAI_DISTRICT}`,\n    fetcher,\n    {\n      revalidateOnMount: true,\n      refreshInterval: 100000,\n    }\n  );\n\n  const {data, error} = useSWR(`${DATA_API_ROOT_MUMBAI_DISTRICT}`, fetcher, {\n    revalidateOnMount: true,\n    refreshInterval: 100000,\n  });\n\n  if (timeseriesResponseError) {\n    console.error(timeseriesResponseError);\n    return;\n  }\n  if (error) {\n    console.error(error);\n    return;\n  }\n  if (!timeseries) {\n    return;\n  }\n  if (!data) {\n    return;\n  }\n\n  console.log(data);\n  const stateData = data?.[stateCode];\n\n  const toggleShowAllDistricts = () => {\n    setShowAllDistricts(!showAllDistricts);\n  };\n\n  const handleSort = (districtNameA, districtNameB) => {\n    const districtA = stateData.districts[districtNameA];\n    const districtB = stateData.districts[districtNameB];\n    return (\n      getStatistic(districtB, 'total', mapStatistic) -\n      getStatistic(districtA, 'total', mapStatistic)\n    );\n  };\n\n  const gridRowCount = useMemo(() => {\n    if (!stateData) return;\n    const gridColumnCount = window.innerWidth >= 540 ? 3 : 2;\n    const districtCount = stateData?.districts\n      ? Object.keys(stateData.districts).filter(\n          (districtName) => districtName !== 'Unknown'\n        ).length\n      : 0;\n    const gridRowCount = Math.ceil(districtCount / gridColumnCount);\n    return gridRowCount;\n  }, [stateData]);\n\n  const stateMetaElement = useRef();\n  const isStateMetaVisible = useIsVisible(stateMetaElement);\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    [0, 0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${index * 250}ms`,\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n\n  const lookback = showAllDistricts ? (window.innerWidth >= 540 ? 10 : 8) : 6;\n\n  const lastDataDate = useMemo(() => {\n    const updatedDates = [\n      stateData?.meta?.date,\n      stateData?.meta?.tested?.date,\n      stateData?.meta?.vaccinated?.date,\n    ].filter((date) => date);\n    return updatedDates.length > 0\n      ? formatISO(max(updatedDates.map((date) => parseIndiaDate(date))), {\n          representation: 'date',\n        })\n      : null;\n  }, [stateData]);\n\n  const primaryStatistic = MAP_STATISTICS.includes(mapStatistic)\n    ? mapStatistic\n    : 'confirmed';\n\n  const noDistrictData = useMemo(() => {\n    // Heuristic: All cases are in Unknown\n    return !!(\n      stateData?.districts &&\n      stateData.districts?.[UNKNOWN_DISTRICT_KEY] &&\n      PRIMARY_STATISTICS.every(\n        (statistic) =>\n          getStatistic(stateData, 'total', statistic) ===\n          getStatistic(\n            stateData.districts[UNKNOWN_DISTRICT_KEY],\n            'total',\n            statistic\n          )\n      )\n    );\n  }, [stateData]);\n\n  const statisticConfig = STATISTIC_CONFIGS[primaryStatistic];\n\n  const noRegionHighlightedDistrictData =\n    regionHighlighted?.districtName &&\n    regionHighlighted.districtName !== UNKNOWN_DISTRICT_KEY &&\n    noDistrictData;\n\n  const districts = Object.keys(\n    ((!noDistrictData || !statisticConfig.hasPrimary) &&\n      stateData?.districts) ||\n      {}\n  );\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          Coronavirus Outbreak in {STATE_NAMES[stateCode]} - covid19india.org\n        </title>\n        <meta\n          name=\"title\"\n          content={`Coronavirus Outbreak in ${STATE_NAMES[stateCode]}: Latest Map and Case Count`}\n        />\n      </Helmet>\n\n      <div className=\"State\">\n        <div className=\"state-left\">\n          <StateHeader data={stateData} stateCode={stateCode} />\n\n          <div style={{position: 'relative'}}>\n            <MapSwitcher {...{mapStatistic, setMapStatistic}} />\n            <Level data={stateData} />\n            <Minigraphs\n              timeseries={timeseries?.[stateCode]?.dates}\n              {...{stateCode}}\n              forceRender={!!timeseriesResponseError}\n            />\n          </div>\n\n          {stateData?.total?.vaccinated1 && (\n            <VaccinationHeader data={stateData} />\n          )}\n\n          {data && (\n            <Suspense fallback={<div style={{minHeight: '50rem'}} />}>\n              <MapExplorer\n                {...{\n                  stateCode,\n                  data,\n                  regionHighlighted,\n                  setRegionHighlighted,\n                  mapStatistic,\n                  setMapStatistic,\n                  lastDataDate,\n                  delta7Mode,\n                  setDelta7Mode,\n                  noRegionHighlightedDistrictData,\n                  noDistrictData,\n                }}\n              ></MapExplorer>\n            </Suspense>\n          )}\n\n          <span ref={stateMetaElement} />\n\n          {isStateMetaVisible && data && (\n            <Suspense fallback={<div />}>\n              <StateMeta\n                {...{\n                  stateCode,\n                  data,\n                }}\n                timeseries={timeseries?.[stateCode]?.dates}\n              />\n            </Suspense>\n          )}\n        </div>\n\n        <div className=\"state-right\">\n          <>\n            <div className=\"district-bar\">\n              <div\n                className={classnames('district-bar-top', {\n                  expanded: showAllDistricts,\n                })}\n              >\n                <div className=\"district-bar-left\">\n                  <h2\n                    className={classnames(primaryStatistic, 'fadeInUp')}\n                    style={trail[0]}\n                  >\n                    {t('Top districts')}\n                  </h2>\n                  <div\n                    className={`districts fadeInUp ${\n                      showAllDistricts ? 'is-grid' : ''\n                    }`}\n                    style={\n                      showAllDistricts\n                        ? {\n                            gridTemplateRows: `repeat(${gridRowCount}, 2rem)`,\n                            ...trail[1],\n                          }\n                        : trail[1]\n                    }\n                  >\n                    {districts\n                      .filter((districtName) => districtName !== 'Unknown')\n                      .sort((a, b) => handleSort(a, b))\n                      .slice(0, showAllDistricts ? undefined : 5)\n                      .map((districtName) => {\n                        const total = getStatistic(\n                          stateData.districts[districtName],\n                          'total',\n                          primaryStatistic\n                        );\n                        const delta = getStatistic(\n                          stateData.districts[districtName],\n                          'delta',\n                          primaryStatistic\n                        );\n                        return (\n                          <div key={districtName} className=\"district\">\n                            <h2>{formatNumber(total)}</h2>\n                            <h5>{t(districtName)}</h5>\n                            {primaryStatistic !== 'active' && (\n                              <div className=\"delta\">\n                                <h6 className={primaryStatistic}>\n                                  {delta > 0\n                                    ? '\\u2191' + formatNumber(delta)\n                                    : ''}\n                                </h6>\n                              </div>\n                            )}\n                          </div>\n                        );\n                      })}\n                  </div>\n                </div>\n\n                <div className=\"district-bar-right fadeInUp\" style={trail[2]}>\n                  {timeseries &&\n                    (primaryStatistic === 'confirmed' ||\n                      primaryStatistic === 'deceased') && (\n                      <div className=\"happy-sign\">\n                        {Object.keys(timeseries[stateCode]?.dates || {})\n                          .slice(-lookback)\n                          .every(\n                            (date) =>\n                              getStatistic(\n                                timeseries[stateCode].dates[date],\n                                'delta',\n                                primaryStatistic\n                              ) === 0\n                          ) && (\n                          <div\n                            className={`alert ${\n                              primaryStatistic === 'confirmed' ? 'is-green' : ''\n                            }`}\n                          >\n                            <SmileyIcon />\n                            <div className=\"alert-right\">\n                              No new {primaryStatistic} cases in the past five\n                              days\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  <DeltaBarGraph\n                    timeseries={timeseries?.[stateCode]?.dates}\n                    statistic={primaryStatistic}\n                    {...{stateCode, lookback}}\n                    forceRender={!!timeseriesResponseError}\n                  />\n                </div>\n              </div>\n\n              <div className=\"district-bar-bottom\">\n                {districts.length > 5 ? (\n                  <button\n                    className=\"button fadeInUp\"\n                    onClick={toggleShowAllDistricts}\n                    style={trail[3]}\n                  >\n                    <span>\n                      {t(showAllDistricts ? 'View less' : 'View all')}\n                    </span>\n                  </button>\n                ) : (\n                  <div style={{height: '3.75rem', flexBasis: '15%'}} />\n                )}\n              </div>\n            </div>\n\n            <Suspense fallback={<div />}>\n              <TimeseriesExplorer\n                {...{\n                  stateCode,\n                  timeseries,\n                  regionHighlighted,\n                  setRegionHighlighted,\n                  noRegionHighlightedDistrictData,\n                }}\n                forceRender={!!timeseriesResponseError}\n              />\n            </Suspense>\n          </>\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default memo(State);\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"sourceRoot":""}