{"version":3,"sources":["../node_modules/d3-array/src/max.js","components/Minigraphs.js","../node_modules/fast-deep-equal/index.js"],"names":["max","values","valueof","undefined","value","index","margin","Minigraphs","timeseries","timelineDate","date","isMumbai","levelStatistics","MUMBAI_LEVEL_STATISTICS","LEVEL_STATISTICS","refs","useRef","endDate","getIndiaDateYesterdayISO","useMeasure","wrapperRef","width","Math","min","dates","useMemo","pastDates","Object","keys","filter","lastDate","length","cutOffDateLower","formatISO","subDays","parseIndiaDate","MINIGRAPH_LOOKBACK_DAYS","representation","getMinigraphStatistic","useCallback","statistic","getStatistic","useEffect","T","chartRight","chartBottom","xScale","scaleTime","clamp","domain","range","current","forEach","ref","pathLength","svg","select","color","STATISTIC_CONFIGS","dailyMaxAbs","abs","yScale","scaleLinear","linePath","line","curve","curveMonotoneX","x","y","selectAll","data","join","enter","append","attr","this","getTotalLength","call","transition","delay","duration","update","attrTween","previous","interpolatePath","selection","style","className","map","classnames","el","preserveAspectRatio","height","isEqual","prevProps","currProps","forceRender","equal","stateCode","memo","module","exports","a","b","constructor","i","Array","isArray","RegExp","source","flags","valueOf","prototype","toString","hasOwnProperty","key"],"mappings":"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","file":"static/js/35.bd6726d5.chunk.js","sourcesContent":["export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","import {\n  MINIGRAPH_LOOKBACK_DAYS,\n  LEVEL_STATISTICS,\n  MUMBAI_LEVEL_STATISTICS,\n  STATISTIC_CONFIGS,\n} from '../constants';\nimport {\n  getStatistic,\n  getIndiaDateYesterdayISO,\n  parseIndiaDate,\n} from '../utils/commonFunctions';\n\nimport classnames from 'classnames';\nimport {max} from 'd3-array';\nimport {interpolatePath} from 'd3-interpolate-path';\nimport {scaleTime, scaleLinear} from 'd3-scale';\nimport {select} from 'd3-selection';\nimport {line, curveMonotoneX} from 'd3-shape';\nimport 'd3-transition';\nimport {formatISO, subDays} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport {memo, useCallback, useEffect, useRef, useMemo} from 'react';\nimport {useMeasure} from 'react-use';\n\n// Dimensions\nconst margin = {top: 10, right: 10, bottom: 2, left: 10};\nconst height = 75;\nconst maxWidth = 120;\n\nfunction Minigraphs({timeseries, date: timelineDate, isMumbai = false}) {\n  const levelStatistics = isMumbai ? MUMBAI_LEVEL_STATISTICS : LEVEL_STATISTICS;\n\n  const refs = useRef([]);\n  const endDate = timelineDate || getIndiaDateYesterdayISO();\n\n  let [wrapperRef, {width}] = useMeasure();\n  width = Math.min(width, maxWidth);\n\n  const dates = useMemo(() => {\n    const pastDates = Object.keys(timeseries || {}).filter(\n      (date) => date <= endDate\n    );\n    const lastDate = pastDates[pastDates.length - 1];\n\n    const cutOffDateLower = formatISO(\n      subDays(parseIndiaDate(lastDate), MINIGRAPH_LOOKBACK_DAYS),\n      {representation: 'date'}\n    );\n    return pastDates.filter((date) => date >= cutOffDateLower);\n  }, [endDate, timeseries]);\n\n  const getMinigraphStatistic = useCallback(\n    (date, statistic) => {\n      return getStatistic(timeseries?.[date], 'delta', statistic);\n    },\n    [timeseries]\n  );\n\n  useEffect(() => {\n    if (!width) return;\n\n    const T = dates.length;\n\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n\n    const xScale = scaleTime()\n      .clamp(true)\n      .domain([\n        parseIndiaDate(dates[0] || endDate),\n        parseIndiaDate(dates[T - 1]) || endDate,\n      ])\n      .range([margin.left, chartRight]);\n\n    refs.current.forEach((ref, index) => {\n      const svg = select(ref);\n      const statistic = levelStatistics[index];\n      const color = STATISTIC_CONFIGS[statistic].color;\n\n      const dailyMaxAbs = max(dates, (date) =>\n        Math.abs(getMinigraphStatistic(date, statistic))\n      );\n\n      const yScale = scaleLinear()\n        .clamp(true)\n        .domain([-dailyMaxAbs, dailyMaxAbs])\n        .range([chartBottom, margin.top]);\n\n      const linePath = line()\n        .curve(curveMonotoneX)\n        .x((date) => xScale(parseIndiaDate(date)))\n        .y((date) => yScale(getMinigraphStatistic(date, statistic)));\n\n      let pathLength;\n      svg\n        .selectAll('path')\n        .data(T ? [dates] : [])\n        .join(\n          (enter) =>\n            enter\n              .append('path')\n              .attr('fill', 'none')\n              .attr('stroke', color + '99')\n              .attr('stroke-width', 2.5)\n              .attr('d', linePath)\n              .attr('stroke-dasharray', function () {\n                return (pathLength = this.getTotalLength());\n              })\n              .call((enter) =>\n                enter\n                  .attr('stroke-dashoffset', pathLength)\n                  .transition()\n                  .delay(100)\n                  .duration(2500)\n                  .attr('stroke-dashoffset', 0)\n              ),\n          (update) =>\n            update\n              .attr('stroke-dasharray', null)\n              .transition()\n              .duration(500)\n              .attrTween('d', function (date) {\n                const previous = select(this).attr('d');\n                const current = linePath(date);\n                return interpolatePath(previous, current);\n              })\n              .selection()\n        );\n\n      svg\n        .selectAll('circle')\n        .data(T ? [dates[T - 1]] : [])\n        .join(\n          (enter) =>\n            enter\n              .append('circle')\n              .attr('fill', color)\n              .attr('r', 2.5)\n              .attr('cx', (date) => xScale(parseIndiaDate(date)))\n              .attr('cy', (date) =>\n                yScale(getMinigraphStatistic(date, statistic))\n              )\n              .style('opacity', 0)\n              .call((enter) =>\n                enter\n                  .transition()\n                  .delay(2100)\n                  .duration(500)\n                  .style('opacity', 1)\n                  .attr('cx', (date) => xScale(parseIndiaDate(date)))\n                  .attr('cy', (date) =>\n                    yScale(getMinigraphStatistic(date, statistic))\n                  )\n              ),\n          (update) =>\n            update\n              .transition()\n              .duration(500)\n              .attr('cx', (date) => xScale(parseIndiaDate(date)))\n              .attr('cy', (date) =>\n                yScale(getMinigraphStatistic(date, statistic))\n              )\n              .style('opacity', 1)\n              .selection()\n        );\n    });\n  }, [endDate, dates, width, getMinigraphStatistic]);\n\n  return (\n    <div className=\"Minigraph\">\n      {levelStatistics.map((statistic, index) => (\n        <div\n          key={statistic}\n          className={classnames('svg-parent')}\n          ref={index === 0 ? wrapperRef : null}\n          style={{width: `calc(${100 / levelStatistics.length}%)`}}\n        >\n          <svg\n            ref={(el) => {\n              refs.current[index] = el;\n            }}\n            preserveAspectRatio=\"xMidYMid meet\"\n            width={width}\n            height={height}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (currProps.forceRender) {\n    return false;\n  } else if (!currProps.timeseries && prevProps.timeseries) {\n    return true;\n  } else if (currProps.timeseries && !prevProps.timeseries) {\n    return false;\n  } else if (!equal(currProps.stateCode, prevProps.stateCode)) {\n    return false;\n  } else if (!equal(currProps.date, prevProps.date)) {\n    return false;\n  } else if (currProps.isMumbai !== prevProps.isMumbai) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(Minigraphs, isEqual);\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n"],"sourceRoot":""}